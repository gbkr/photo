#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'photo'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/photo` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/photo now"
  exit 64
end

include GLI::App

program_desc 'Retrieve, store and backup photos from your digital camera.'

version Photo::VERSION

#desc 'Describe some switch here'
#switch [:s,:switch]

#desc 'Describe some flag here'
#default_value 'the default'
#arg_name 'The name of the argument'
#flag [:f,:flagname]

desc 'Initial configuration'
arg_name 'Describe arguments to init here'
command :init do |c|
  c.desc 'Describe a switch to init'
  c.switch :s

  c.desc 'Describe a flag to init'
  c.default_value 'default'
  c.flag :f
  c.action do |global_options,options,args|
    Photo::Init.new
  end
end

desc 'Retrieve photos from the camera and store them in the file system'
arg_name 'Describe arguments to fetch here'
command :fetch do |c|
  c.action do |global_options,options,args|
    Photo::Backup.new
  end
end

desc 'Backup photos by synchronizing to an external drive'
arg_name 'Describe arguments to backup here'
command :backup do |c|
  c.action do |global_options,options,args|
    puts "backup command ran"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
