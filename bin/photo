#!/usr/bin/env ruby
require 'gli'
require 'photo'
include GLI::App

program_desc 'Retrieve, store and backup photos from your digital camera.'

version Photo::VERSION
desc 'Initial configuration'
command :init do |c|
  c.action do |global_options,options,args|
    Photo::Init.new
  end
end

desc 'Retrieve photos from the camera and store them in the file system'
command :fetch do |c|
  c.action do |global_options,options,args|
    fetcher = Photo::Fetch.new(STDOUT)
    fetcher.fetch
  end
end

desc 'Backup photos by synchronizing to an external drive'
command :backup do |c|
  c.action do |global_options,options,args|
    backup = Photo::Backup.new(STDOUT)
    backup.backup
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  puts exception.message
  false
end

exit run(ARGV)
